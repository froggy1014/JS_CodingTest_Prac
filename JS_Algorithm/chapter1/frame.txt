<details>
<summary>8_5 합이 같은 부분집합(DFS : 아마존 인터뷰)</summary>
<div markdown="1">       
<br>


 ### ❓ Question

 <pre> 
N개의 원소로 구성된 자연수 집합이 주어지면, 이 집합을 두 개의 부분집합으로 나누었을 때
두 부분집합의 원소의 합이 서로 같은 경우가 존재하면 “YES"를 출력하고, 
그렇지 않으면 ”NO"를 출력하는 프로그램을 작성하세요.
둘로 나뉘는 두 부분집합은 서로소 집합이며, 두 부분집합을 합하면 입력으로 주어진 원래의 집합이 되어 합니다.
예를 들어 {1, 3, 5, 6, 7, 10}이 입력되면 {1, 3, 5, 7} = {6, 10} 으로 
두 부분집합의 합이 16으로 같은 경우가 존재하는 것을 알 수 있다.
 </pre>

<br>

### 📚 입력설명 및 출력설명

<pre>
첫 번째 줄에 자연수 N(1<=N<=10)이 주어집니다.
두 번째 줄에 집합의 원소 N개가 주어진다. 각 원소는 중복되지 않으며, 
그 크기는 1,000,000 이하입니다.
<hr/>
첫 번째 줄에 “YES" 또는 ”NO"를 출력한다.
</pre>


<br>

### 🗣 입력예제 & 출력예제

<pre>
6
1 3 5 6 7 10 
<hr/>
YES
</pre>



 <br>

 ### ‼️ Solution

 ```javascript
function solution(arr){
  let answer = "NO", flag = 0;
  let total = arr.reduce((a,b) => a+b,0);
  let n = arr.length;
  function DFS(L,sum){
    if(flag) return;
  
    if(L === n)
    {
        if((total - sum)===sum) 
        {
          answer = "YES"
          flag=1;
        }
    }
    else
    {
      DFS(L+1, sum+arr[L]);
      DFS(L+1, sum);
    }
  }
  DFS(0,0)
  return answer;
}
let arr = [1,3,5,6,7,10]
console.log(solution(arr));
 ```

<br>

 <pre>
 💬  
  </pre>

</div>
</details>


 ### ⁉️ Alternative Solution
 
  ```javascript
 function solution(arr){
  answer = Math.min(...arr);
  return answer;
}
let arr=[5,7,1,3,2,9,11]
console.log(solution(arr));
```



```mermaid
 classDiagram
  direction LR
  
  class DFS{
  매개변수
  복귀주소
  지역변수
  }
  
  class StackFrame1 {
    DFS(3)
  }
  class StackFrame2{
		DFS(2)
    DFS(3)
  }
  class StackFrame3{
    DFS(1)
    DFS(2)
    DFS(3)
  }

  
  StackFrame1 --> StackFrame2 : stack
  StackFrame2 --> StackFrame3 : stack
	
  ```